# Server Port
server:
  port: 8080

# database Local, Docker Environment Variable
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL:""}
    username: ${SPRING_DATASOURCE_USERNAME:""}
    password: ${SPRING_DATASOURCE_PASSWORD:""}
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SPRING_MAIL_USERNAME:""}
    password: ${SPRING_MAIL_PASSWORD:""}
    properties:
      mail:
        smtp:
          ssl:
            trust: smtp.gmail.com
          auth: true
          timeout: 5000
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:""}
            client-secret: ${GOOGLE_CLIENT_SECRET:""}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs

    # spring data jpa Setting
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
